// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wame.Application.Context;

#nullable disable

namespace Wame.Application.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221123025629_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Wame.Domain.Entities.BaseIdentities.BaseIdentity", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Email");

                    b.ToTable("BaseIdentities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseIdentity");
                });

            modelBuilder.Entity("Wame.Domain.Entities.Campaigns.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InvitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("RecruiterEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("RecruiterEmail");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("Wame.Domain.Entities.Interviews.Interview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aptitudes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CandidateEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("General")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("RecruiterEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Strengths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weaknesses")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CandidateEmail");

                    b.HasIndex("RecruiterEmail");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("Wame.Domain.Entities.Jobs.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Wame.Domain.Entities.Users.Candidate", b =>
                {
                    b.HasBaseType("Wame.Domain.Entities.BaseIdentities.BaseIdentity");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Aptitudes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 11, 23, 2, 56, 29, 431, DateTimeKind.Utc).AddTicks(6325));

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Formation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CampaignId");

                    b.HasDiscriminator().HasValue("Candidate");
                });

            modelBuilder.Entity("Wame.Domain.Entities.Users.Recruiter", b =>
                {
                    b.HasBaseType("Wame.Domain.Entities.BaseIdentities.BaseIdentity");

                    b.HasDiscriminator().HasValue("Recruiter");
                });

            modelBuilder.Entity("Wame.Domain.Entities.Campaigns.Campaign", b =>
                {
                    b.HasOne("Wame.Domain.Entities.Jobs.Job", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("Wame.Domain.Entities.Users.Recruiter", "Recruiter")
                        .WithMany()
                        .HasForeignKey("RecruiterEmail");

                    b.Navigation("Position");

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("Wame.Domain.Entities.Interviews.Interview", b =>
                {
                    b.HasOne("Wame.Domain.Entities.Campaigns.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId");

                    b.HasOne("Wame.Domain.Entities.Users.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateEmail");

                    b.HasOne("Wame.Domain.Entities.Users.Recruiter", "Recruiter")
                        .WithMany()
                        .HasForeignKey("RecruiterEmail");

                    b.Navigation("Campaign");

                    b.Navigation("Candidate");

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("Wame.Domain.Entities.Users.Candidate", b =>
                {
                    b.HasOne("Wame.Domain.Entities.Campaigns.Campaign", "Campaign")
                        .WithMany("Candidates")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("Wame.Domain.Entities.Campaigns.Campaign", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
